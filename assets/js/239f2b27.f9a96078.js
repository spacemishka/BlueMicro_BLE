"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7690],{3905:function(t,e,n){n.d(e,{Zo:function(){return m},kt:function(){return N}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function d(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),o=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):d(d({},e),t)),n},m=function(t){var e=o(t.components);return a.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},k=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,m=i(t,["components","mdxType","originalType","parentName"]),k=o(n),N=r,c=k["".concat(p,".").concat(N)]||k[N]||u[N]||l;return n?a.createElement(c,d(d({ref:e},m),{},{components:n})):a.createElement(c,d({ref:e},m))}));function N(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,d=new Array(l);d[0]=k;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=t,i.mdxType="string"==typeof t?t:r,d[1]=i;for(var o=2;o<l;o++)d[o]=n[o];return a.createElement.apply(null,d)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},9977:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return o},toc:function(){return m},default:function(){return k}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),d=["components"],i={id:"keycodes_extended",title:"Extended Keycodes",slug:"/keycodes_extended"},p=void 0,o={unversionedId:"keycodes/keycodes_extended",id:"keycodes/keycodes_extended",title:"Extended Keycodes",description:"Firmware only keycodes are keycodes that combine multiple keycodes from the standard HID Usage Tables to generate specific characters.",source:"@site/docs/keycodes/extended.md",sourceDirName:"keycodes",slug:"/keycodes_extended",permalink:"/docs/keycodes_extended",editUrl:"https://github.com/jpconstantineau/BlueMicro_BLE/tree/documentation-docusaurus/documentation/docs/keycodes/extended.md",tags:[],version:"current",frontMatter:{id:"keycodes_extended",title:"Extended Keycodes",slug:"/keycodes_extended"},sidebar:"someSidebar",previous:{title:"Basic Keycodes",permalink:"/docs/keycodes_basic"},next:{title:"Comsumer and Media",permalink:"/docs/keycodes/keycodes_media"}},m=[{value:"Mod Keys",id:"mod-keys",children:[],level:3}],u={toc:m};function k(t){var e=t.components,n=(0,r.Z)(t,d);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Firmware only keycodes are keycodes that combine multiple keycodes from the standard HID Usage Tables to generate specific characters."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Combination"),(0,l.kt)("th",{parentName:"tr",align:null},"Usage Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Keycode Identifiers"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and Grave"),(0,l.kt)("td",{parentName:"tr",align:null},"~"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_TILD")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and 1"),(0,l.kt)("td",{parentName:"tr",align:null},"!"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_EXLM")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and 2"),(0,l.kt)("td",{parentName:"tr",align:null},"@"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_AT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and 3"),(0,l.kt)("td",{parentName:"tr",align:null},"#"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_HASH")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and 4"),(0,l.kt)("td",{parentName:"tr",align:null},"$"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_DLR")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and 5"),(0,l.kt)("td",{parentName:"tr",align:null},"%"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_PERC")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and 6"),(0,l.kt)("td",{parentName:"tr",align:null},"^"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_CIRC")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and 7"),(0,l.kt)("td",{parentName:"tr",align:null},"&"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_AMPR")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and 8"),(0,l.kt)("td",{parentName:"tr",align:null},"*"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_ASTR")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and 9"),(0,l.kt)("td",{parentName:"tr",align:null},"("),(0,l.kt)("td",{parentName:"tr",align:null},"KC_LPRN")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and 0"),(0,l.kt)("td",{parentName:"tr",align:null},")"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_RPRN")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and Minus"),(0,l.kt)("td",{parentName:"tr",align:null},"_"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_UNDS")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and Equal"),(0,l.kt)("td",{parentName:"tr",align:null},"+"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_PLUS")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and ["),(0,l.kt)("td",{parentName:"tr",align:null},"{"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_LCBR")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and ]"),(0,l.kt)("td",{parentName:"tr",align:null},"}"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_RCBR")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and ","\\"),(0,l.kt)("td",{parentName:"tr",align:null},"|"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_PIPE")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and ;"),(0,l.kt)("td",{parentName:"tr",align:null},":"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_COLN")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and '"),(0,l.kt)("td",{parentName:"tr",align:null},'"'),(0,l.kt)("td",{parentName:"tr",align:null},"KC_DQUO    KC_DQT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and ,"),(0,l.kt)("td",{parentName:"tr",align:null},"<"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_LT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and ."),(0,l.kt)("td",{parentName:"tr",align:null},">"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_GT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and /"),(0,l.kt)("td",{parentName:"tr",align:null},"?"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_QUES")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and Non US #"),(0,l.kt)("td",{parentName:"tr",align:null},"Non US Tilde"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_NUTL")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift and Non US ","\\"),(0,l.kt)("td",{parentName:"tr",align:null},"Non US Pipe"),(0,l.kt)("td",{parentName:"tr",align:null},"KC_NUPI")))),(0,l.kt)("p",null,"Table is still a work in progress.  Refer to ",(0,l.kt)("inlineCode",{parentName:"p"},"hid_keycodes.h")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"advanced_keycodes.h")," for a detailed list of keycodes."),(0,l.kt)("h3",{id:"mod-keys"},"Mod Keys"),(0,l.kt)("p",null,"Mod keys are special macros you can use to send a Modifier and a Key at the same time on a single keypress."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Macro"),(0,l.kt)("th",{parentName:"tr",align:null},"Usage Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Example"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"S(KEY)"),(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift + Key"),(0,l.kt)("td",{parentName:"tr",align:null},"S(KC_1)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"LALT(KEY)"),(0,l.kt)("td",{parentName:"tr",align:null},"Left ALT + Key"),(0,l.kt)("td",{parentName:"tr",align:null},"LALT(KC_TAB)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RALT(KEY)"),(0,l.kt)("td",{parentName:"tr",align:null},"Right ALT + Key"),(0,l.kt)("td",{parentName:"tr",align:null},"RALT(KC_TAB)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"LCTL(KEY)"),(0,l.kt)("td",{parentName:"tr",align:null},"Left CTL + Key"),(0,l.kt)("td",{parentName:"tr",align:null},"LCTL(KC_C)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RCTL(KEY)"),(0,l.kt)("td",{parentName:"tr",align:null},"Right CTL + Key"),(0,l.kt)("td",{parentName:"tr",align:null},"RCTL(KC_C)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"LSFT(KEY)"),(0,l.kt)("td",{parentName:"tr",align:null},"Left Shift + Key"),(0,l.kt)("td",{parentName:"tr",align:null},"LSFT(KC_1)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RSFT(KEY)"),(0,l.kt)("td",{parentName:"tr",align:null},"Right Shift + Key"),(0,l.kt)("td",{parentName:"tr",align:null},"LALT(KC_1)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"LGUI(KEY)"),(0,l.kt)("td",{parentName:"tr",align:null},"Left GUI + Key"),(0,l.kt)("td",{parentName:"tr",align:null},"LGUI(KC_1)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RGUI(KEY)"),(0,l.kt)("td",{parentName:"tr",align:null},"Right GUI + Key"),(0,l.kt)("td",{parentName:"tr",align:null},"RGUI(KC_1)")))))}k.isMDXComponent=!0}}]);